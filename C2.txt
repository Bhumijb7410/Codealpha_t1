#include <iostream>
using namespace std;


const int SIZE = 9;


// Function to check if a number can be placed in a cell
bool isValid(int grid[SIZE][SIZE], int row, int col, int num) {
// Check the row and column
for (int i = 0; i < SIZE; i++) {
if (grid[row][i] == num || grid[i][col] == num) {
return false;
}
}


// Check the 3x3 subgrid
int subgridRow = row - row % 3;
int subgridCol = col - col % 3;
for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
        if (grid[subgridRow + i][subgridCol + j] == num) {
            return false;
        }
    }
}


return true;
}


// Function to solve the Sudoku puzzle using backtracking
bool solveSudoku(int grid[SIZE][SIZE]) {
for (int i = 0; i < SIZE; i++) {
for (int j = 0; j < SIZE; j++) {
if (grid[i][j] == 0) {
for (int num = 1; num <= 9; num++) {
if (isValid(grid, i, j, num)) {
grid[i][j] = num;
if (solveSudoku(grid)) {
return true;
}
grid[i][j] = 0;
}
}
return false;
}
}
}
return true;
}


// Function to print the Sudoku grid
void printGrid(int grid[SIZE][SIZE]) {
for (int i = 0; i < SIZE; i++) {
for (int j = 0; j < SIZE; j++) {
cout << grid[i][j] << " ";
if ((j + 1) % 3 == 0 && j < 8) {
cout << "| ";
}
}
cout << endl;
if ((i + 1) % 3 == 0 && i < 8) {
cout << "---------------------" << endl;
}
}
}


int main() {
int grid[SIZE][SIZE] = {
{5, 3, 0, 0, 7, 0, 0, 0, 0},
{6, 0, 0, 1, 9, 5, 0, 0, 0},
{0, 9, 8, 0, 0, 0, 0, 6, 0},
{8, 0, 0, 0, 6, 0, 0, 0, 3},
{4, 0, 0, 8, 0, 3, 0, 0, 1},
{7, 0, 0, 0, 2, 0, 0, 0, 6},
{0, 6, 0, 0, 0, 0, 2, 8, 0},
{0, 0, 0, 4, 1, 9, 0, 0, 5},
{0, 0, 0, 0, 8, 0, 0, 7, 9}
};


cout << "Original Grid:" << endl;
printGrid(grid);


if (solveSudoku(grid)) {
    cout << "Solved Grid:" << endl;
    printGrid(grid);
} else {
    cout << "No solution exists." << endl;
}


return 0;
}